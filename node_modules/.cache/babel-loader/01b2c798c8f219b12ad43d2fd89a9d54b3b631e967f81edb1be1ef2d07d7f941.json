{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\Assign\\\\jobfreak\\\\src\\\\Input.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Formik, Form, Field } from 'formik';\n// import TextField from '@mui/material/TextField';\n// import Autocomplete from '@mui/material/Autocomplete';\n// import Radio from '@mui/material/Radio';\n// import RadioGroup from '@mui/material/RadioGroup';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import FormControl from '@mui/material/FormControl';\n// import FormLabel from '@mui/material/FormLabel';\n// import OutlinedInput from '@mui/material/OutlinedInput';\n// import InputLabel from '@mui/material/InputLabel';\n// import MenuItem from '@mui/material/MenuItem';\n// import ListItemText from '@mui/material/ListItemText';\n// import Select from '@mui/material/Select';\n// import Checkbox from '@mui/material/Checkbox';\n// import Button from '@mui/material/Button';\n\n// // Multi-Select\n// const ITEM_HEIGHT = 48;\n// const ITEM_PADDING_TOP = 8;\n// const MenuProps = {\n//     PaperProps: {\n//         style: {\n//             maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n//             width: 250,\n//         },\n//     },\n// };\n\n// const names = [\n//     'Writing',\n//     'Marketing',\n//     'Blogging',\n//     'Learning languages',\n//     'Photography',\n//     'Travel',\n//     'Sports',\n//     'Yoga',\n//     'Dance',\n// ];\n\n// // DropeDown\n// const country = [\n//     { label: 'India' },\n//     { label: 'US' },\n//     { label: 'UK' },\n//     { label: 'Canada' },\n//     { label: 'China' },\n// ];\n\n// const Input = () => {\n//     const [personName, setPersonName] = useState([]);\n\n//     const handleChange = (event) => {\n//         const {\n//             target: { value },\n//         } = event;\n//         setPersonName(typeof value === 'string' ? value.split(',') : value);\n//     };\n\n//     const initialValues = {\n//         name: '',\n//         country: '',\n//         hobbiesInterests: '',\n//         gender: '',\n//         address: '',\n//     };\n\n//     const handleSubmit = (values, props) => {\n//         console.log(values);\n//     };\n\n//     return (\n//         <div className=\"Container\">\n//             <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n//                 {(props) => (\n//                     <Form>\n//                         {/* username */}\n//                         <Field\n//                             as={TextField}\n//                             name=\"name\"\n//                             id=\"outlined-basic\"\n//                             label=\"User's name\"\n//                             variant=\"outlined\"\n//                             fullWidth\n//                         />\n\n//                         {/* Country */}\n//                         <Autocomplete\n//                             fullWidth\n//                             id=\"combo-box-demo\"\n//                             options={country}\n//                             renderInput={(params) => (\n//                                 <Field as={TextField} {...params} name=\"country\" label=\"Country\" />\n//                             )}\n//                         />\n\n//                         {/* Hobbies and Interests */}\n//                         <FormControl fullWidth>\n//                             <InputLabel id=\"demo-multiple-checkbox-label\">Hobbies & Interests</InputLabel>\n//                             <Field\n//                                 as={Select}\n//                                 name=\"hobbiesInterests\"\n//                                 labelId=\"demo-multiple-checkbox-label\"\n//                                 id=\"demo-multiple-checkbox\"\n//                                 multiple\n//                                 value={personName}\n//                                 onChange={handleChange}\n//                                 input={<OutlinedInput label=\"Hobbies and Interests\" />}\n//                                 renderValue={(selected) => selected.join(', ')}\n//                                 MenuProps={MenuProps}\n//                             >\n//                                 {names.map((name) => (\n//                                     <MenuItem key={name} value={name}>\n//                                         <Checkbox checked={personName.indexOf(name) > -1} />\n//                                         <ListItemText primary={name} />\n//                                     </MenuItem>\n//                                 ))}\n//                             </Field>\n//                         </FormControl>\n//                         <br />\n\n//                         {/* Gender */}\n//                         <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel>\n//                         <Field\n//                             as={RadioGroup}\n//                             row\n//                             aria-labelledby=\"demo-row-radio-buttons-group-label\"\n//                             name=\"gender\"\n//                         >\n//                             <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n//                             <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n//                             <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n//                         </Field>\n//                         <br />\n\n//                         {/* Address */}\n//                         <Field\n//                             as={TextField}\n//                             fullWidth\n//                             name=\"address\"\n//                             id=\"outlined-multiline-static\"\n//                             label=\"Address\"\n//                             multiline\n//                             rows={4}\n//                             defaultValue=\"\"\n//                         />\n\n//                         <Button type=\"submit\" variant=\"contained\">\n//                             Submit\n//                         </Button>\n//                     </Form>\n//                 )}\n//             </Formik>\n//         </div>\n//     );\n// };\n\n// export default Input;\n\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, useField } from 'formik';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\n\n// Multi-Select\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Writing', 'Marketing', 'Blogging', 'Learning languages', 'Photography', 'Travel', 'Sports', 'Yoga', 'Dance'];\n\n// DropeDown\nconst country = [{\n  label: 'India'\n}, {\n  label: 'US'\n}, {\n  label: 'UK'\n}, {\n  label: 'Canada'\n}, {\n  label: 'China'\n}];\nconst Input = () => {\n  _s();\n  const [personName, setPersonName] = useState([]);\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName(typeof value === 'string' ? value.split(',') : value);\n  };\n  const initialValues = {\n    name: '',\n    country: '',\n    hobbiesInterests: '',\n    gender: '',\n    address: ''\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: handleSubmit,\n      children: props => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          name: \"name\",\n          id: \"outlined-basic\",\n          label: \"User's name\",\n          variant: \"outlined\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          fullWidth: true,\n          id: \"combo-box-demo\",\n          options: country,\n          renderInput: params => /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            ...params,\n            name: \"country\",\n            label: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-multiple-checkbox-label\",\n            children: \"Hobbies & Interests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: CustomSelect,\n            name: \"hobbiesInterests\",\n            labelId: \"demo-multiple-checkbox-label\",\n            id: \"demo-multiple-checkbox\",\n            multiple: true,\n            value: personName,\n            onChange: handleChange,\n            renderValue: selected => selected.join(', '),\n            MenuProps: MenuProps,\n            children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: name,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: personName.indexOf(name) > -1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 41\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          id: \"demo-row-radio-buttons-group-label\",\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: RadioGroup,\n          row: true,\n          \"aria-labelledby\": \"demo-row-radio-buttons-group-label\",\n          name: \"gender\",\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"female\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 71\n            }, this),\n            label: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"male\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 69\n            }, this),\n            label: \"Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"other\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 70\n            }, this),\n            label: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          fullWidth: true,\n          name: \"address\",\n          id: \"outlined-multiline-static\",\n          label: \"Address\",\n          multiline: true,\n          rows: 4,\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 9\n  }, this);\n};\n_s(Input, \"m4jAXoIxEbTiAYdPcsnuZG2B4wU=\");\n_c = Input;\nconst CustomSelect = _ref => {\n  _s2();\n  let {\n    children,\n    ...props\n  } = _ref;\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(Select, {\n    ...field,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 9\n  }, this);\n};\n_s2(CustomSelect, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n_c2 = CustomSelect;\nexport default Input;\nvar _c, _c2;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"CustomSelect\");","map":{"version":3,"names":["React","useState","Formik","Form","Field","useField","TextField","Autocomplete","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","OutlinedInput","InputLabel","MenuItem","ListItemText","Select","Checkbox","Button","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","country","label","Input","_s","personName","setPersonName","handleChange","event","target","value","split","initialValues","name","hobbiesInterests","gender","address","className","children","onSubmit","handleSubmit","props","as","id","variant","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","options","renderInput","params","CustomSelect","labelId","multiple","onChange","renderValue","selected","join","map","checked","indexOf","primary","row","control","multiline","rows","defaultValue","type","_c","_ref","_s2","field","meta","_c2","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/Assign/jobfreak/src/Input.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import { Formik, Form, Field } from 'formik';\r\n// import TextField from '@mui/material/TextField';\r\n// import Autocomplete from '@mui/material/Autocomplete';\r\n// import Radio from '@mui/material/Radio';\r\n// import RadioGroup from '@mui/material/RadioGroup';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import FormControl from '@mui/material/FormControl';\r\n// import FormLabel from '@mui/material/FormLabel';\r\n// import OutlinedInput from '@mui/material/OutlinedInput';\r\n// import InputLabel from '@mui/material/InputLabel';\r\n// import MenuItem from '@mui/material/MenuItem';\r\n// import ListItemText from '@mui/material/ListItemText';\r\n// import Select from '@mui/material/Select';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Button from '@mui/material/Button';\r\n\r\n// // Multi-Select\r\n// const ITEM_HEIGHT = 48;\r\n// const ITEM_PADDING_TOP = 8;\r\n// const MenuProps = {\r\n//     PaperProps: {\r\n//         style: {\r\n//             maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n//             width: 250,\r\n//         },\r\n//     },\r\n// };\r\n\r\n// const names = [\r\n//     'Writing',\r\n//     'Marketing',\r\n//     'Blogging',\r\n//     'Learning languages',\r\n//     'Photography',\r\n//     'Travel',\r\n//     'Sports',\r\n//     'Yoga',\r\n//     'Dance',\r\n// ];\r\n\r\n// // DropeDown\r\n// const country = [\r\n//     { label: 'India' },\r\n//     { label: 'US' },\r\n//     { label: 'UK' },\r\n//     { label: 'Canada' },\r\n//     { label: 'China' },\r\n// ];\r\n\r\n// const Input = () => {\r\n//     const [personName, setPersonName] = useState([]);\r\n\r\n//     const handleChange = (event) => {\r\n//         const {\r\n//             target: { value },\r\n//         } = event;\r\n//         setPersonName(typeof value === 'string' ? value.split(',') : value);\r\n//     };\r\n\r\n//     const initialValues = {\r\n//         name: '',\r\n//         country: '',\r\n//         hobbiesInterests: '',\r\n//         gender: '',\r\n//         address: '',\r\n//     };\r\n\r\n//     const handleSubmit = (values, props) => {\r\n//         console.log(values);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"Container\">\r\n//             <Formik initialValues={initialValues} onSubmit={handleSubmit}>\r\n//                 {(props) => (\r\n//                     <Form>\r\n//                         {/* username */}\r\n//                         <Field\r\n//                             as={TextField}\r\n//                             name=\"name\"\r\n//                             id=\"outlined-basic\"\r\n//                             label=\"User's name\"\r\n//                             variant=\"outlined\"\r\n//                             fullWidth\r\n//                         />\r\n\r\n//                         {/* Country */}\r\n//                         <Autocomplete\r\n//                             fullWidth\r\n//                             id=\"combo-box-demo\"\r\n//                             options={country}\r\n//                             renderInput={(params) => (\r\n//                                 <Field as={TextField} {...params} name=\"country\" label=\"Country\" />\r\n//                             )}\r\n//                         />\r\n\r\n//                         {/* Hobbies and Interests */}\r\n//                         <FormControl fullWidth>\r\n//                             <InputLabel id=\"demo-multiple-checkbox-label\">Hobbies & Interests</InputLabel>\r\n//                             <Field\r\n//                                 as={Select}\r\n//                                 name=\"hobbiesInterests\"\r\n//                                 labelId=\"demo-multiple-checkbox-label\"\r\n//                                 id=\"demo-multiple-checkbox\"\r\n//                                 multiple\r\n//                                 value={personName}\r\n//                                 onChange={handleChange}\r\n//                                 input={<OutlinedInput label=\"Hobbies and Interests\" />}\r\n//                                 renderValue={(selected) => selected.join(', ')}\r\n//                                 MenuProps={MenuProps}\r\n//                             >\r\n//                                 {names.map((name) => (\r\n//                                     <MenuItem key={name} value={name}>\r\n//                                         <Checkbox checked={personName.indexOf(name) > -1} />\r\n//                                         <ListItemText primary={name} />\r\n//                                     </MenuItem>\r\n//                                 ))}\r\n//                             </Field>\r\n//                         </FormControl>\r\n//                         <br />\r\n\r\n//                         {/* Gender */}\r\n//                         <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel>\r\n//                         <Field\r\n//                             as={RadioGroup}\r\n//                             row\r\n//                             aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n//                             name=\"gender\"\r\n//                         >\r\n//                             <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n//                             <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n//                             <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n//                         </Field>\r\n//                         <br />\r\n\r\n//                         {/* Address */}\r\n//                         <Field\r\n//                             as={TextField}\r\n//                             fullWidth\r\n//                             name=\"address\"\r\n//                             id=\"outlined-multiline-static\"\r\n//                             label=\"Address\"\r\n//                             multiline\r\n//                             rows={4}\r\n//                             defaultValue=\"\"\r\n//                         />\r\n\r\n//                         <Button type=\"submit\" variant=\"contained\">\r\n//                             Submit\r\n//                         </Button>\r\n//                     </Form>\r\n//                 )}\r\n//             </Formik>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Input;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { Formik, Form, Field, useField } from 'formik';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Select from '@mui/material/Select';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Button from '@mui/material/Button';\r\n\r\n// Multi-Select\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst names = [\r\n    'Writing',\r\n    'Marketing',\r\n    'Blogging',\r\n    'Learning languages',\r\n    'Photography',\r\n    'Travel',\r\n    'Sports',\r\n    'Yoga',\r\n    'Dance',\r\n];\r\n\r\n// DropeDown\r\nconst country = [\r\n    { label: 'India' },\r\n    { label: 'US' },\r\n    { label: 'UK' },\r\n    { label: 'Canada' },\r\n    { label: 'China' },\r\n];\r\n\r\nconst Input = () => {\r\n    const [personName, setPersonName] = useState([]);\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setPersonName(typeof value === 'string' ? value.split(',') : value);\r\n    };\r\n\r\n    const initialValues = {\r\n        name: '',\r\n        country: '',\r\n        hobbiesInterests: '',\r\n        gender: '',\r\n        address: '',\r\n    };\r\n\r\n    return (\r\n        <div className=\"Container\">\r\n            <Formik initialValues={initialValues} onSubmit={handleSubmit}>\r\n                {(props) => (\r\n                    <Form>\r\n                        {/* username */}\r\n                        <Field\r\n                            as={TextField}\r\n                            name=\"name\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"User's name\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n\r\n                        {/* Country */}\r\n                        <Autocomplete\r\n                            fullWidth\r\n                            id=\"combo-box-demo\"\r\n                            options={country}\r\n                            renderInput={(params) => (\r\n                                <Field as={TextField} {...params} name=\"country\" label=\"Country\" />\r\n                            )}\r\n                        />\r\n\r\n                        {/* Hobbies and Interests */}\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-multiple-checkbox-label\">Hobbies & Interests</InputLabel>\r\n                            <Field\r\n                                as={CustomSelect}\r\n                                name=\"hobbiesInterests\"\r\n                                labelId=\"demo-multiple-checkbox-label\"\r\n                                id=\"demo-multiple-checkbox\"\r\n                                multiple\r\n                                value={personName}\r\n                                onChange={handleChange}\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {names.map((name) => (\r\n                                    <MenuItem key={name} value={name}>\r\n                                        <Checkbox checked={personName.indexOf(name) > -1} />\r\n                                        <ListItemText primary={name} />\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Field>\r\n                        </FormControl>\r\n                        <br />\r\n\r\n                        {/* Gender */}\r\n                        <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel>\r\n                        <Field\r\n                            as={RadioGroup}\r\n                            row\r\n                            aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                            name=\"gender\"\r\n                        >\r\n                            <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                            <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n                        </Field>\r\n                        <br />\r\n\r\n                        {/* Address */}\r\n                        <Field\r\n                            as={TextField}\r\n                            fullWidth\r\n                            name=\"address\"\r\n                            id=\"outlined-multiline-static\"\r\n                            label=\"Address\"\r\n                            multiline\r\n                            rows={4}\r\n                            defaultValue=\"\"\r\n                        />\r\n\r\n                        <Button type=\"submit\" variant=\"contained\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CustomSelect = ({ children, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n\r\n    return (\r\n        <Select {...field} {...props}>\r\n            {children}\r\n        </Select>\r\n    );\r\n};\r\n\r\nexport default Input;"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,QAAQ;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO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"},"metadata":{},"sourceType":"module","externalDependencies":[]}