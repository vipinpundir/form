{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\Assign\\\\jobfreak\\\\src\\\\Input.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import TextField from '@mui/material/TextField';\n// import Autocomplete from '@mui/material/Autocomplete';\n// import Radio from '@mui/material/Radio';\n// import RadioGroup from '@mui/material/RadioGroup';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import FormControl from '@mui/material/FormControl';\n// import FormLabel from '@mui/material/FormLabel';\n// import OutlinedInput from '@mui/material/OutlinedInput';\n// import InputLabel from '@mui/material/InputLabel';\n// import MenuItem from '@mui/material/MenuItem';\n// import ListItemText from '@mui/material/ListItemText';\n// import Select from '@mui/material/Select';\n// import Checkbox from '@mui/material/Checkbox';\n// import Button from '@mui/material/Button';\n// import { Formik, Form, Field} from 'formik';\n\n// // Multi-Select\n// const ITEM_HEIGHT = 48;\n// const ITEM_PADDING_TOP = 8;\n// const MenuProps = {\n//     PaperProps: {\n//         style: {\n//             maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n//             width: 250,\n//         },\n//     },\n// };\n// const names = [\n//     'Writing',\n//     'Marketing',\n//     'Blogging',\n//     'Learning languages',\n//     'Photography',\n//     'Travel',\n//     'Sports',\n//     'Yoga',\n//     'Dance',\n// ];\n\n// // DropeDown\n// const country = [\n//     { label: 'Indai' },\n//     { label: 'US' },\n//     { label: 'UK' },\n//     { label: 'Canada' },\n//     { label: 'China' },\n\n// ];\n\n// const Input = () => {\n\n//     // Multi-Select\n//     const [personName, setPersonName] = React.useState([]);\n\n//     const handleChange = (event) => {\n//         const {\n//             target: { value },\n//         } = event;\n//         setPersonName(\n//             // On autofill we get a stringified value.\n//             typeof value === 'string' ? value.split(',') : value,\n//         );\n//     };\n\n//     const initialvalues={\n//         name:'',\n//         country:'',\n//         hobbiesInterests:'',\n//         gender:'',\n//         address:''\n//     }\n//     console.log(initialvalues)\n//     const submitHandle=(values,props)=>(\n//        console.log(values)  \n//     )\n//     return (\n//         <div className='Container'>\n//             <Formik  initialvalues={initialvalues} onSubmit={submitHandle} >\n//                 {(props) => (\n//                     <Form>\n//                         {/* username */}\n//                         < Field as={TextField} name=\"name\" id=\"outlined-basic\" label=\"User's name\" variant=\"outlined\" fullWidth  />\n\n//                         {/* Country */}\n//                         <Autocomplete fullWidth\n//                             id=\"combo-box-demo\"\n//                             options={country}\n//                             renderInput={(params) => <Field as={TextField} {...params} name=\"country\" label=\"Country\" />}\n//                         />\n\n//                         {/* Hobbies and Interests */}\n//                         <FormControl fullWidth>\n//                             <InputLabel  id=\"demo-multiple-checkbox-label\">Hobbies & Interests</InputLabel>\n//                             <Select\n//                                 name=\"hobbiesInterests\"\n//                                 labelId=\"demo-multiple-checkbox-label\"\n//                                 id=\"demo-multiple-checkbox\"\n//                                 multiple\n//                                 value={personName}\n//                                 onChange={handleChange}\n//                                 input={<OutlinedInput label=\"Hobbies and Interests\" />}\n//                                 renderValue={(selected) => selected.join(', ')}\n//                                 MenuProps={MenuProps}\n//                             >\n//                                 {names.map((name) => (\n//                                     <MenuItem key={name} value={name}>\n//                                         <Checkbox checked={personName.indexOf(name) > -1} />\n//                                         <ListItemText primary={name} />\n//                                     </MenuItem>\n//                                 ))}\n//                             </Select>\n//                         </FormControl>\n//                         <br></br>\n\n//                         {/* Gender  */}\n//                         <FormLabel  id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel>\n//                         <Field as={RadioGroup} \n//                             row\n//                             aria-labelledby=\"demo-row-radio-buttons-group-label\"\n//                             name=\"gender\"\n//                         >\n//                             <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n//                             <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n//                             <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n\n//                         </Field>\n//                         <br></br>\n\n//                         {/* Address */}\n//                         <Field as={TextField} fullWidth\n//                         name=\"address\"\n//                             id=\"outlined-multiline-static\"\n//                             label=\"Address\"\n//                             multiline\n//                             rows={4}\n//                             defaultValue=\"\"\n//                         />\n\n//                         <Button type='submit' variant=\"contained\">Submit</Button>\n//                     </Form>\n//                 )}\n\n//             </Formik>\n//         </div>\n//     )\n// }\n\n// export default Input\nimport React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\n\n// Multi-Select\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Writing', 'Marketing', 'Blogging', 'Learning languages', 'Photography', 'Travel', 'Sports', 'Yoga', 'Dance'];\n\n// DropeDown\nconst country = [{\n  label: 'India'\n}, {\n  label: 'US'\n}, {\n  label: 'UK'\n}, {\n  label: 'Canada'\n}, {\n  label: 'China'\n}];\nconst Input = () => {\n  _s();\n  const [personName, setPersonName] = useState([]);\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName(typeof value === 'string' ? value.split(',') : value);\n  };\n  const initialValues = {\n    name: '',\n    country: '',\n    hobbiesInterests: '',\n    gender: '',\n    address: ''\n  };\n  const handleSubmit = (values, props) => {\n    console.log(values);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: handleSubmit,\n      children: props => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          name: \"name\",\n          id: \"outlined-basic\",\n          label: \"User's name\",\n          variant: \"outlined\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          fullWidth: true,\n          id: \"combo-box-demo\",\n          options: country,\n          renderInput: params => /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            ...params,\n            name: \"country\",\n            label: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-multiple-checkbox-label\",\n            children: \"Hobbies & Interests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"hobbiesInterests\",\n            labelId: \"demo-multiple-checkbox-label\",\n            id: \"demo-multiple-checkbox\",\n            multiple: true,\n            value: personName,\n            onChange: handleChange,\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              label: \"Hobbies and Interests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 24\n            }, this),\n            renderValue: selected => selected.join(', '),\n            MenuProps: MenuProps,\n            children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: name,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: personName.indexOf(name) > -1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          id: \"demo-row-radio-buttons-group-label\",\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: RadioGroup,\n          row: true,\n          \"aria-labelledby\": \"demo-row-radio-buttons-group-label\",\n          name: \"gender\",\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"female\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 57\n            }, this),\n            label: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"male\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 55\n            }, this),\n            label: \"Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"other\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 56\n            }, this),\n            label: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          fullWidth: true,\n          name: \"address\",\n          id: \"outlined-multiline-static\",\n          label: \"Address\",\n          multiline: true,\n          rows: 4,\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"m4jAXoIxEbTiAYdPcsnuZG2B4wU=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","Formik","Form","Field","TextField","Autocomplete","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","OutlinedInput","InputLabel","MenuItem","ListItemText","Select","Checkbox","Button","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","country","label","Input","_s","personName","setPersonName","handleChange","event","target","value","split","initialValues","name","hobbiesInterests","gender","address","handleSubmit","values","props","console","log","className","children","onSubmit","as","id","variant","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","options","renderInput","params","labelId","multiple","onChange","input","renderValue","selected","join","map","checked","indexOf","primary","row","control","multiline","rows","defaultValue","type","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/Assign/jobfreak/src/Input.js"],"sourcesContent":["// import React from 'react'\r\n// import TextField from '@mui/material/TextField';\r\n// import Autocomplete from '@mui/material/Autocomplete';\r\n// import Radio from '@mui/material/Radio';\r\n// import RadioGroup from '@mui/material/RadioGroup';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import FormControl from '@mui/material/FormControl';\r\n// import FormLabel from '@mui/material/FormLabel';\r\n// import OutlinedInput from '@mui/material/OutlinedInput';\r\n// import InputLabel from '@mui/material/InputLabel';\r\n// import MenuItem from '@mui/material/MenuItem';\r\n// import ListItemText from '@mui/material/ListItemText';\r\n// import Select from '@mui/material/Select';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Button from '@mui/material/Button';\r\n// import { Formik, Form, Field} from 'formik';\r\n\r\n\r\n// // Multi-Select\r\n// const ITEM_HEIGHT = 48;\r\n// const ITEM_PADDING_TOP = 8;\r\n// const MenuProps = {\r\n//     PaperProps: {\r\n//         style: {\r\n//             maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n//             width: 250,\r\n//         },\r\n//     },\r\n// };\r\n// const names = [\r\n//     'Writing',\r\n//     'Marketing',\r\n//     'Blogging',\r\n//     'Learning languages',\r\n//     'Photography',\r\n//     'Travel',\r\n//     'Sports',\r\n//     'Yoga',\r\n//     'Dance',\r\n// ];\r\n\r\n\r\n// // DropeDown\r\n// const country = [\r\n//     { label: 'Indai' },\r\n//     { label: 'US' },\r\n//     { label: 'UK' },\r\n//     { label: 'Canada' },\r\n//     { label: 'China' },\r\n\r\n// ];\r\n\r\n\r\n\r\n// const Input = () => {\r\n\r\n\r\n//     // Multi-Select\r\n//     const [personName, setPersonName] = React.useState([]);\r\n\r\n//     const handleChange = (event) => {\r\n//         const {\r\n//             target: { value },\r\n//         } = event;\r\n//         setPersonName(\r\n//             // On autofill we get a stringified value.\r\n//             typeof value === 'string' ? value.split(',') : value,\r\n//         );\r\n//     };\r\n\r\n//     const initialvalues={\r\n//         name:'',\r\n//         country:'',\r\n//         hobbiesInterests:'',\r\n//         gender:'',\r\n//         address:''\r\n//     }\r\n//     console.log(initialvalues)\r\n//     const submitHandle=(values,props)=>(\r\n//        console.log(values)  \r\n//     )\r\n//     return (\r\n//         <div className='Container'>\r\n//             <Formik  initialvalues={initialvalues} onSubmit={submitHandle} >\r\n//                 {(props) => (\r\n//                     <Form>\r\n//                         {/* username */}\r\n//                         < Field as={TextField} name=\"name\" id=\"outlined-basic\" label=\"User's name\" variant=\"outlined\" fullWidth  />\r\n\r\n\r\n//                         {/* Country */}\r\n//                         <Autocomplete fullWidth\r\n//                             id=\"combo-box-demo\"\r\n//                             options={country}\r\n//                             renderInput={(params) => <Field as={TextField} {...params} name=\"country\" label=\"Country\" />}\r\n//                         />\r\n\r\n\r\n\r\n//                         {/* Hobbies and Interests */}\r\n//                         <FormControl fullWidth>\r\n//                             <InputLabel  id=\"demo-multiple-checkbox-label\">Hobbies & Interests</InputLabel>\r\n//                             <Select\r\n//                                 name=\"hobbiesInterests\"\r\n//                                 labelId=\"demo-multiple-checkbox-label\"\r\n//                                 id=\"demo-multiple-checkbox\"\r\n//                                 multiple\r\n//                                 value={personName}\r\n//                                 onChange={handleChange}\r\n//                                 input={<OutlinedInput label=\"Hobbies and Interests\" />}\r\n//                                 renderValue={(selected) => selected.join(', ')}\r\n//                                 MenuProps={MenuProps}\r\n//                             >\r\n//                                 {names.map((name) => (\r\n//                                     <MenuItem key={name} value={name}>\r\n//                                         <Checkbox checked={personName.indexOf(name) > -1} />\r\n//                                         <ListItemText primary={name} />\r\n//                                     </MenuItem>\r\n//                                 ))}\r\n//                             </Select>\r\n//                         </FormControl>\r\n//                         <br></br>\r\n\r\n\r\n//                         {/* Gender  */}\r\n//                         <FormLabel  id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel>\r\n//                         <Field as={RadioGroup} \r\n//                             row\r\n//                             aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n//                             name=\"gender\"\r\n//                         >\r\n//                             <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n//                             <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n//                             <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n\r\n//                         </Field>\r\n//                         <br></br>\r\n\r\n\r\n//                         {/* Address */}\r\n//                         <Field as={TextField} fullWidth\r\n//                         name=\"address\"\r\n//                             id=\"outlined-multiline-static\"\r\n//                             label=\"Address\"\r\n//                             multiline\r\n//                             rows={4}\r\n//                             defaultValue=\"\"\r\n//                         />\r\n\r\n//                         <Button type='submit' variant=\"contained\">Submit</Button>\r\n//                     </Form>\r\n//                 )}\r\n\r\n\r\n//             </Formik>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Input\r\nimport React, { useState } from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Select from '@mui/material/Select';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Button from '@mui/material/Button';\r\n\r\n// Multi-Select\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Writing',\r\n  'Marketing',\r\n  'Blogging',\r\n  'Learning languages',\r\n  'Photography',\r\n  'Travel',\r\n  'Sports',\r\n  'Yoga',\r\n  'Dance',\r\n];\r\n\r\n// DropeDown\r\nconst country = [\r\n  { label: 'India' },\r\n  { label: 'US' },\r\n  { label: 'UK' },\r\n  { label: 'Canada' },\r\n  { label: 'China' },\r\n];\r\n\r\nconst Input = () => {\r\n  const [personName, setPersonName] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(typeof value === 'string' ? value.split(',') : value);\r\n  };\r\n\r\n  const initialValues = {\r\n    name: '',\r\n    country: '',\r\n    hobbiesInterests: '',\r\n    gender: '',\r\n    address: '',\r\n  };\r\n\r\n  const handleSubmit = (values, props) => {\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\r\n        {(props) => (\r\n          <Form>\r\n            {/* username */}\r\n            <Field\r\n              as={TextField}\r\n              name=\"name\"\r\n              id=\"outlined-basic\"\r\n              label=\"User's name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            />\r\n\r\n            {/* Country */}\r\n            <Autocomplete\r\n              fullWidth\r\n              id=\"combo-box-demo\"\r\n              options={country}\r\n              renderInput={(params) => (\r\n                <Field as={TextField} {...params} name=\"country\" label=\"Country\" />\r\n              )}\r\n            />\r\n\r\n            {/* Hobbies and Interests */}\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"demo-multiple-checkbox-label\">Hobbies & Interests</InputLabel>\r\n              <Select\r\n                name=\"hobbiesInterests\"\r\n                labelId=\"demo-multiple-checkbox-label\"\r\n                id=\"demo-multiple-checkbox\"\r\n                multiple\r\n                value={personName}\r\n                onChange={handleChange}\r\n                input={<OutlinedInput label=\"Hobbies and Interests\" />}\r\n                renderValue={(selected) => selected.join(', ')}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {names.map((name) => (\r\n                  <MenuItem key={name} value={name}>\r\n                    <Checkbox checked={personName.indexOf(name) > -1} />\r\n                    <ListItemText primary={name} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <br />\r\n\r\n            {/* Gender */}\r\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel>\r\n            <Field\r\n              as={RadioGroup}\r\n              row\r\n              aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n              name=\"gender\"\r\n            >\r\n              <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n              <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n            </Field>\r\n            <br />\r\n\r\n            {/* Address */}\r\n            <Field\r\n              as={TextField}\r\n              fullWidth\r\n              name=\"address\"\r\n              id=\"outlined-multiline-static\"\r\n              label=\"Address\"\r\n              multiline\r\n              rows={4}\r\n              defaultValue=\"\"\r\n            />\r\n\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,QAAQ;AAC5C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;;AAEzC;AAAA,SAAAC,M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"},"metadata":{},"sourceType":"module","externalDependencies":[]}